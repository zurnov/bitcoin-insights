name: Publish and Deploy

on:
  push:
    branches:
      - main
      - dev

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: java-app-bitcoin:latest

jobs:
  publish:
    name: Publish Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login
        run: |
          echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build
      - name: Build and Publish Docker Image
        run: |
          docker build . --tag ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}
          docker push ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    needs: publish
    name: Deploy Prod
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH Key
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
      - name: Connect and Deploy Prod
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            cd ${{ secrets.WORK_DIR }} &&
            docker compose up -d java-api-prod &&
            exit
          "
      - name: Cleanup SSH Key
        run: rm -rf ~/.ssh

  deploy-dev:
    if: github.ref == 'refs/heads/dev'
    needs: publish
    name: Deploy Dev
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH Key
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
      - name: Connect and Deploy Dev
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            cd ${{ secrets.WORK_DIR }} &&
            docker compose up -d java-api-dev &&
            exit
          "
      - name: Cleanup SSH Key
        run: rm -rf ~/.ssh
